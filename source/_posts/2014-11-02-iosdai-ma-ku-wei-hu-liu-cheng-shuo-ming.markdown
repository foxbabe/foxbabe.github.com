---
layout: post
title: "iOS代码库维护流程说明"
date: 2014-11-02 23:38:33 +0800
comments: true
categories: 
---

## 说明
### 版本信息

 - 2014.08.01 V1.0 创建iOS代码库维护流程说明初版

### 文档目的

 - 约定代码库提交流程，方便后期代码库的补充
 - 约定代码库审核流程，保证提交代码质量
 - 问题反馈方式，便于代码库完善

### 文档简介
    
文档主要从四个方面来阐述iOS代码库维护流程：

 1. 代码提交流程说明，阐述代码提交时需要提交的具体内容和注意事项；
 2. 代码审核流程说明，阐述代码审核的主要内容和标准；
 3. 代码库完善方式，通过反馈bug和提修改意见进行代码库的完善；
 4. 代码库分享，技术点实现讨论和新增代码分享
    
### 角色说明

| 角色类型       |  简称     | 组成成员       |
| :--------:     | :-----:   | :----:         |
| 代码库提交人员 | Submiter  | iOS工程师      |
| 代码库审核人员 | Reviewer  | 代码库审核小组 |
| 代码库维护人员 | Modifier  | 代码库维护小组 |


---

## 代码提交流程

### 提交流程步骤说明

代码提交流程主要分为如下几个步骤：

 1. 控件背景描述
 2. 控件介绍
 3. 编写控件代码
 4. 编写使用Demo
 5. 功能性和兼容性测试
 6. 提交审核

### 控件背景描述

代码控件产生的背景描述，阐述在实际项目背景下，基于什么需求来和考虑来编写待提交的代码控件。

### 控件主要功能介绍

控件的主要功能说明，阐述控件的主要功能以及控件的特点。

 - 版本号
 - 兼容性
 - 平台
 - 功能说明

### 控件代码编写

按照iOS编码规范编写控件代码，录入代码库的控件统一以TTI开头，代表(3ti)公司版权代码。

### 使用Demo编写

编写测试Demo，在Demo中介绍控件的使用方式和主要特性。

 - 在Demo中展现控件的特性
 - 介绍控件的具体使用方法
 - 说明控件使用需要注意的事项

### 功能和兼容性测试

 - 保证提交的控件和Demo功能正常
 - 对于支持的不同系统进行测试

### 提交审核
  
    提交审核时将下述资料打包压缩，发送到iOS代码库审核小组邮箱：
    1. 代码控件
    2. 测试Demo
    3. 控件说明

控件说明模板：
    
    版本号：V1.0
    
    功能说明：
    TTIXXXX控件主要用....
    
    注意事项：
    1、....
    2、....
    
    测试环境：
    Xcode 5.0, iOS 6.0及以上
    
    


 
 
---

## 代码审核流程

### 审核流程步骤说明

代码审核流程主要分为如下几个步骤：

 1. 提交资料审核
 2. 编码规范审核
 2. 控件源码审核
 3. 控件Demo审核
 5. 审核反馈
 5. 提交到代码库

### 提交资料审核

    提交资料审核，主要审核Submiter提交的代码资料是否按照要求的内容提交，是否包含代码控件、测试Demo和控件说明文件。


### 编码规范审核
    
    编码规范审核，按照iOS编码规范文档，对提供的代码控件进行命名规范、编码规范等审核。对于与iOS不符合的地方，Reviewer有义务将审核不通过的内容反馈给Submiter。

### 控件源码审核

    控件源码审核主要是从功能实现方式和代码逻辑，以及代码的简易性和易用性上进行核查。Reviewer对于提交的代码如果有较好的实现方式或源码中存在明显的逻辑问题时，需要记录后进行反馈。

### 测试Demo审核

    测试Demo审核，主要从以下几个方面进行审核：
    1、测试Demo在指定的测试环境下是否能正常运行；
    2、测试Demo运行起来，与描述的功能是否一致;
    3、测试Demo中是否较好和完整的展示了控件使用的方式；
    4、测试Demo在指定的不同系统版本号下是否运行正常；

### 审核反馈

    Reviewer通过上述审核后，需要给到Submiter审核结果。
    1、如审核通过，Reviewer需要将控件提交给Modifier添加到代码库，并且邮件告知Submiter审核通过；
    2、如审核失败，Reviewer需要清晰反馈具体的审核失败的原因，邮件告知Submiter，待Submiter完善后再次进行提交审核。

### 更新到代码库

    控件审核通过后，统一由Modifier将控件添加到iOS代码库和iOS模板工程中。
    
    
---
## 代码库完善

代码库完善主要分为三个方面：问题或bug反馈、完善意见处理和iOS代码库维护。

### 问题或bug反馈

    对于iOS代码库中存在的问题和bug，使用者可发送邮件给到代码库维护小组，主要从下面几个方面描述问题或bug：
    1、是否为必先bug
    2、bug等级
        A:严重bug（会造成程序奔溃或无法运行）
        B:中等bug（功能存在异常，能满足基本要求，但是存在缺陷）
        C:轻微bug（界面布局层面，如布局有问题，展示的字体大小颜色不对等）
    3、bug产生的条件是什么

### 完善意见处理

    所有工程师都有提出完善意见的权利，完善意见主要分为如下几个方面：
    1、项目中经常使用到，希望能处理为控件的形式同意处理；
    2、项目中不经常使用，但是一旦设计之前没研究过的开发者需要进过较长时间才能处理的问题，对于这些也可以建议纳入iOS代码库中；
    3、提交代码和开发效率的建议
    4、.....

### iOS代码库维护

    iOS代码库统一由代码维护小组进行维护和修改，对于反馈的完善意见，也可分配相应的自愿的iOS工程师进行编写控件的流程进行处理。

---
## 代码库分享交流

    iOS代码库分享，当代码库新纳入的控件数量超过10个时，由代码库维护小组安排安排，进行代码库分享交流。



